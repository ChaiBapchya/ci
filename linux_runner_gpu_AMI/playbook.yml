--- # Ansible playbook to provision Linux GPU runner for CI
- name: provisioning with Ansible
  hosts: all
  gather_facts: no
  become: true
  become_user: root
  tasks:
    - apt_repository:
        repo: ppa:fish-shell/release-3
    - apt:
        update_cache: yes
        dpkg_options: 'force-confold,force-confdef'
        name:
            - vim-nox
            - cgdb
            - fish
            - vim-nox
            - nmon
            - silversearcher-ag
            - tree
            - git
            - openssh-client
            - bwm-ng
            - htop
#            - openjdk-9-jdk-headless
            - python3-virtualenv
            - python3-pip
            - mc
            - links
            - lynx
            - iptables-persistent
            - nmap
            - build-essential
#            - cmake
            - ninja-build
            - curl
            - libatlas-base-dev
            - libjemalloc-dev
            - liblapack-dev
            - libopenblas-dev
            - libopencv-dev
            - libzmq3-dev
            - software-properties-common
            - sudo
            - unzip
            - wget
            - sysstat
            - awscli
            - ccache
            - virtualenv
            - python3-setuptools
            - python-setuptools
            - libcurl4-openssl-dev
            - libtool
            - autoconf
    - apt:
        state: absent
        name:
            - btrfs-progs
            - btrfs-tools

    - name: adjust ccache max size to 50G
      command: ccache -M50G

    - name: Install recent CMake
      shell: |
        set -exuo pipefail
        apt -y remove --purge --auto-remove cmake

        # Update CMAKE for correct cuda autotedetection: https://github.com/clab/dynet/issues/1457
        version=3.14
        build=0
        mkdir -p /tmp/cmake
        cd /tmp/cmake
        wget https://cmake.org/files/v$version/cmake-$version.$build.tar.gz
        tar -xzvf cmake-$version.$build.tar.gz
        cd cmake-$version.$build/
        ./bootstrap --system-curl --parallel=$(nproc)
        make -j$(nproc)
        make install

      args:
        executable: /bin/bash
        creates: /usr/local/bin/cmake


- import_playbook: playbooks/docker.yml
- import_playbook: playbooks/gpu.yml

